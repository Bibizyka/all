@using System.Web.UI.WebControls
@using WebApplication.Models
@model WebApplication.Models.Article

@{
    ViewBag.Title = "Создать рецепт";
}


@*@using (Html.BeginForm("Create", "Article", FormMethod.Post, new { role = "form", @class = "form-horizontal", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true)
        <fieldset>
            <legend>Новый рецепт</legend>

            <div class="form-group">
                @Html.LabelFor(model => model.Name, new { @class = "col-md-2 control-label" })

                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, new { @class = "col-md-2 control-label" })

                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Description, 3, 100, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Тип/категория", new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.CategoryId, ViewBag.Categories as SelectList, new { @class = "form-control", id = "state" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Выберите ингридиенты?", new { @class = "col-md-2 control-label" })

                <div class="col-md-10" id="newingridients">
                    @foreach (var item in ViewBag.Ingridients)
                    {
                        <input type="checkbox" name="ingridient" value="@item.Id" />
                        @item.Name
                        <br />
                    }
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Подтвердить отправку?", new { @class = "col-md-2 control-label" })

                <div class="col-md-10">
                    <input class="buttonS" type="submit" value="Сохранить" width="100" />
                </div>
            </div>
        </fieldset>
    </div>

}*@

    @Html.Label("Тип/категория", new { @class = "col-md-2 control-label" })

        @Html.DropDownListFor(model => model.CategoryId, ViewBag.Categories as SelectList, new { @class = "form-control", id = "state" })


    @Html.Label("Выберите ингридиенты?", new { @class = "col-md-2 control-label" })

        @foreach (var item in ViewBag.Ingridients)
        {
            <input type="checkbox" name="ingridient" value="@item.Id" />
                        @item.Name
                        <br />
        }



@section Scripts {
    <script type="text/javascript">

        $('#state').click(function (e) {
                // получаем выбранный id
            var id = $(this).val();
            $.ajax({
                type: 'GET',
                url: '@Url.Action("NewIngridients2")/',
                data: {
                    id: id
                },
                success: function (result) {
                    alert(result);
                    // заменяем содержимое присланным частичным представлением
                    //$('#newingridients').replaceWith(result);
                },

                error: function (xhr, status, p3) {
                    alert(status);
                }
            });
            $.ajax({
                type: 'GET',
                url: '@Url.Action("NewIngridients")/',
                data: {
                    id: id
                },
                success: function (result) {
                    alert(result);
                    // заменяем содержимое присланным частичным представлением
                    //$('#newingridients').replaceWith(result);
                },

                error: function (xhr, status, p3) {
                    alert(status);
                }
            });
        });

    </script>
}
